(undo-tree-save-format-version . 1)
"e769d96146af5475f9f9e84ee1bbcb4e9c854ed7"
[nil nil nil nil (25369 30293 678517 45000) 0 nil]
([nil nil ((15 . 18) (t 25367 63105 112036 71000)) nil (25369 30293 678516 373000) 0 nil])
([nil nil ((apply -4 17 80 undo--wrap-and-run-primitive-undo 17 80 ((50 . 52) (18 . 20)))) nil (25369 30293 678516 35000) 0 nil])
([nil nil ((61 . 68) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -61) (undo-tree-id538 . -1) 62 (59 . 62) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -59) (undo-tree-id539 . -1) 60 (58 . 60) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -58) (undo-tree-id540 . -1) 59 (43 . 59) (35 . 43) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -35) (undo-tree-id541 . -1) 36 (34 . 36) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -34) (undo-tree-id542 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -35) (undo-tree-id543 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -36) (undo-tree-id544 . -1) 37 (21 . 37) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -21) (undo-tree-id545 . -1) (#("=" 0 1 (fontified t face font-lock-comment-face)) . -22) (undo-tree-id546 . -1) 23 (18 . 23) (15 . 18) (14 . 15) (14 . 15) (34 . 37) (44 . 53) (43 . 44) (34 . 44) (33 . 34) (#("\\" 0 1 (fontified t face sh-escaped-newline)) . -33) (undo-tree-id547 . -1) 34 (33 . 34) (24 . 32) (22 . 25) (#(" " 0 1 (fontified t)) . -22) (undo-tree-id548 . -1) 23 (15 . 23) (#("a" 0 1 (fontified t)) . -15) (undo-tree-id549 . -1) (#("u" 0 1 (fontified t)) . -16) (undo-tree-id550 . -1) (#("d" 0 1 (fontified t)) . -17) (undo-tree-id551 . -1) (#("i" 0 1 (fontified t)) . -18) (undo-tree-id552 . -1) (#("0" 0 1 (fontified t)) . -19) (undo-tree-id553 . -1) 20 (18 . 20) (#("o" 0 1 (fontified t)) . -18) (undo-tree-id554 . -1) 19 (15 . 19) (14 . 15) (#("i" 0 1 (fontified t)) . -25) (undo-tree-id555 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -26) (undo-tree-id556 . -1) (#(" " 0 1 (fontified t)) . -27) (undo-tree-id557 . -1) 28 (25 . 28) (23 . 25) (#(";" 0 1 (fontified t)) . -23) (undo-tree-id558 . -1) (#("
" 0 1 (fontified t)) . -24) (undo-tree-id559 . -1) 25 (24 . 25) (23 . 24) (#(" " 0 1 (fontified t)) . -23) (undo-tree-id560 . -1) 24 (22 . 24) (21 . 22) (#(" " 0 1 (fontified t)) . -21) (undo-tree-id561 . -1) 22 (15 . 22) (#("v" 0 1 (fontified t)) . -15) (undo-tree-id562 . -1) (#("a" 0 1 (fontified t)) . -16) (undo-tree-id563 . -1) (#("l" 0 1 (fontified t)) . -17) (undo-tree-id564 . -1) (#("u" 0 1 (fontified t)) . -18) (undo-tree-id565 . -1) (#("e" 0 1 (fontified t)) . -19) (undo-tree-id566 . -1) 20 (16 . 20) (15 . 16)) nil (25369 30293 678513 436000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -135) (undo-tree-id529 . -1) 136 (121 . 136) (117 . 121) (#("p" 0 1 (fontified t face font-lock-comment-face)) . -117) (undo-tree-id530 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -118) (undo-tree-id531 . -1) (#("p" 0 1 (fontified t face font-lock-comment-face)) . -119) (undo-tree-id532 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -120) (undo-tree-id533 . -1) 121 (117 . 121) (#("p" 0 1 (fontified t face font-lock-comment-face)) . -117) (undo-tree-id534 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -118) (undo-tree-id535 . -1) (#("p" 0 1 (fontified t face font-lock-comment-face)) . -119) (undo-tree-id536 . -1) 120 (113 . 120) (#("
" 0 1 (fontified t)) . -113) (undo-tree-id537 . -1) 114 (112 . 114)) nil (25369 30293 678500 931000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -198) (undo-tree-id506 . -1) (#("
" 0 1 (fontified t)) . -199) (undo-tree-id507 . -1) (#(" " 0 1 (fontified t)) . -200) (undo-tree-id508 . -1) (#(" " 0 1 (fontified t)) . -201) (undo-tree-id509 . -1) (#(" " 0 1 (fontified t)) . -202) (undo-tree-id510 . -1) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -203) (undo-tree-id511 . -1) (undo-tree-id512 . 1) (undo-tree-id513 . -1) 204 (184 . 197) (181 . 184) (175 . 182) (#("w" 0 1 (fontified t)) . -175) (undo-tree-id514 . -1) (#("c" 0 1 (fontified t)) . -176) (undo-tree-id515 . -1) 177 (175 . 177) (168 . 175) (170 . 173) (#("       " 0 7 (fontified nil)) . 169) (undo-tree-id516 . -3) (172 . 176) (169 . 173) (#("       " 0 7 (fontified nil)) . 168) (undo-tree-id517 . -3) (171 . 175) (167 . 172) (166 . 168) (163 . 166) (#(" " 0 1 (fontified t face font-lock-string-face)) . -162) (undo-tree-id518 . -1) 163 (161 . 163) (159 . 162) (#("=" 0 1 (fontified t)) . -159) (undo-tree-id519 . -1) (#(" " 0 1 (fontified t)) . -160) (undo-tree-id520 . -1) 161 (158 . 161) (#("-" 0 1 (fontified t)) . -158) (undo-tree-id521 . -1) 159 (158 . 159) (#("=" 0 1 (fontified t)) . -158) (undo-tree-id522 . -1) (#("=" 0 1 (fontified t)) . -159) (undo-tree-id523 . -1) (#(" " 0 1 (fontified t)) . -160) (undo-tree-id524 . -1) 161 (157 . 161) (#(" " 0 1 (fontified t)) . -157) (undo-tree-id525 . -1) 158 (151 . 158) (#("i" 0 1 (fontified t)) . -151) (undo-tree-id526 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -152) (undo-tree-id527 . -1) 153 (151 . 153) (#("$" 0 1 (fontified t)) . -151) (undo-tree-id528 . -1) 152 (151 . 152) (146 . 151) (146 . 147)) nil (25369 30293 678495 889000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 166) (undo-tree-id504 . 1) (undo-tree-id505 . -1)) nil (25369 30293 678486 836000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 165) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1)) nil (25369 30293 678485 585000) 0 nil])
([nil nil ((169 . 173) (165 . 169)) nil (25369 30293 678471 315000) 0 nil])
([nil nil ((262 . 263) (260 . 262) (#("
" 0 1 (fontified t)) . -260) (undo-tree-id155 . -1) (undo-tree-id156 . 1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (#(" " 0 1 (fontified t)) . -261) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (#(" " 0 1 (fontified t)) . -262) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (#(" " 0 1 (fontified t)) . -263) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (#(" " 0 1 (fontified t)) . -264) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) 265 (261 . 265) (#("    " 0 4 (fontified nil)) . 260) (260 . 264) (260 . 261) (257 . 258) (#("p" 0 1 (fontified t face font-lock-string-face)) . -257) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) 258 (256 . 258) (#("o" 0 1 (fontified t face font-lock-string-face)) . -256) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) 257 (253 . 257) (242 . 253) (236 . 243) (232 . 236) (#("     " 0 5 (fontified nil)) . -227) (236 . 237) (#(" " 0 1 (fontified t)) . -236) (undo-tree-id468 . -1) 237 (232 . 237) (226 . 232) (224 . 226) (222 . 223) (212 . 223) (209 . 212) (#("
" 0 1 (fontified t)) . -209) (undo-tree-id469 . -1) (#(" " 0 1 (fontified t)) . -210) (undo-tree-id470 . -1) (#(" " 0 1 (fontified t)) . -211) (undo-tree-id471 . -1) (#(" " 0 1 (fontified t)) . -212) (undo-tree-id472 . -1) (#(" " 0 1 (fontified t)) . -213) (undo-tree-id473 . -1) 214 (210 . 214) (#("       " 0 7 (fontified nil)) . -205) (216 . 217) (#(" " 0 1 (fontified t)) . -216) (undo-tree-id474 . -1) 217 (212 . 217) (205 . 212)) nil (25369 30293 678466 723000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -166)) nil (25369 30293 678359 943000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -260) (undo-tree-id0 . -1) (undo-tree-id1 . 1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 261 (260 . 261) (259 . 260) (#("
" 0 1 (fontified t)) . -259) (undo-tree-id26 . -1) (undo-tree-id27 . 1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) 260 (259 . 260) (#("
" 0 1 (fontified t)) . -259) (undo-tree-id45 . -1) (undo-tree-id46 . 1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (#("
" 0 1 (fontified t)) . -260) (undo-tree-id115 . -1) (undo-tree-id116 . 1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) 261 (259 . 261)) nil (25369 30293 678356 25000) 0 nil])
([nil nil ((#("    echo \"Dicreasing Audio\"
" 0 4 (fontified t) 4 8 (fontified t face font-lock-builtin-face) 8 9 (fontified t) 9 27 (fontified t face font-lock-string-face) 27 28 (fontified t)) . 229) (t 25369 30293 717073 853000)) nil (25369 30386 437809 325000) 0 nil])
([nil nil ((#("       echo \"Increasing Audio\"
" 0 7 (fontified t) 7 11 (fontified t face font-lock-builtin-face) 11 12 (fontified t) 12 30 (fontified t face font-lock-string-face) 30 31 (fontified t)) . 171)) nil (25369 30386 437808 609000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -171) (undo-tree-id616 . -4) 175 (170 . 175)) nil (25369 30386 437807 907000) 0 nil])
([nil nil ((nil rear-nonsticky nil 178 . 179) (#("
" 0 1 (fontified nil)) . -202) (171 . 203)) nil (25369 30386 437806 461000) 0 nil])
([nil nil ((#("       echo \"Increasing Audio\"
" 0 6 (fontified t) 6 7 (fontified t rear-nonsticky t) 7 11 (fontified t face font-lock-builtin-face) 11 12 (fontified t) 12 30 (fontified t face font-lock-string-face) 30 31 (fontified t)) . 172) (undo-tree-id612 . 1) (undo-tree-id613 . -30) (undo-tree-id614 . -7) (undo-tree-id615 . -30) 179) nil (25369 30386 437805 742000) 0 nil])
([nil nil ((nil rear-nonsticky nil 210 . 211) (nil fontified nil 171 . 211) (171 . 211)) nil (25369 30386 437803 1000) 0 nil])
([nil nil ((208 . 209) (#("-" 0 1 (fontified t)) . 208)) nil (25369 30386 437802 73000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -239) (undo-tree-id567 . -4) (undo-tree-id568 . -4) (undo-tree-id569 . -4) (undo-tree-id570 . -4) (undo-tree-id571 . -4) (undo-tree-id572 . -4) (undo-tree-id573 . -4) (undo-tree-id574 . -4) (undo-tree-id575 . -4) (undo-tree-id576 . -4) (undo-tree-id577 . -4) (undo-tree-id578 . -4) (undo-tree-id579 . -4) (undo-tree-id580 . -4) (undo-tree-id581 . -4) (undo-tree-id582 . -4) (undo-tree-id583 . -4) (undo-tree-id584 . -4) (undo-tree-id585 . -4) (undo-tree-id586 . -4) (undo-tree-id587 . -4) (undo-tree-id588 . -4) (undo-tree-id589 . -4) (undo-tree-id590 . -4) (undo-tree-id591 . -4) (undo-tree-id592 . -4) (undo-tree-id593 . -4) (undo-tree-id594 . -4) (undo-tree-id595 . -4) (undo-tree-id596 . -4) (undo-tree-id597 . -4) (undo-tree-id598 . -4) (undo-tree-id599 . -4) (undo-tree-id600 . -4) (undo-tree-id601 . -4) (undo-tree-id602 . -4) (undo-tree-id603 . -4) (undo-tree-id604 . -4) (undo-tree-id605 . -4) (undo-tree-id606 . -4) (undo-tree-id607 . -4) (undo-tree-id608 . -4) (undo-tree-id609 . -4) (undo-tree-id610 . -4) (undo-tree-id611 . -4) 243 (238 . 243)) nil (25369 30386 437800 625000) 0 nil])
([nil nil ((nil rear-nonsticky nil 278 . 279) (nil fontified nil 239 . 279) (239 . 279)) nil (25369 30386 437773 549000) 0 nil])
([nil nil ((171 . 175)) nil (25369 30386 437772 436000) 0 nil])
([nil nil ((243 . 247)) nil (25369 30386 437768 785000) 0 nil])
([nil nil ((180 . 184) (#("   " 0 3 (fontified nil)) . -175) (182 . 183) (178 . 182) (174 . 178) (#(" " 0 1 (fontified t)) . -174) (undo-tree-id664 . -1) 175 (172 . 175) (163 . 171) (149 . 164) (146 . 149) (145 . 147) (t 25369 30386 448259 279000)) nil (25369 30656 799012 311000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 180) (undo-tree-id662 . 1) (undo-tree-id663 . -3) 183) nil (25369 30656 799010 713000) 0 nil])
([nil nil ((181 . 185)) nil (25369 30656 799008 840000) 0 nil])
([nil nil ((180 . 184)) nil (25369 30656 799008 166000) 0 nil])
([nil nil ((209 . 213) 212) nil (25369 30656 799007 602000) 0 nil])
([nil nil ((395 . 399) 401 (359 . 363) 362 (354 . 358) (349 . 353) (344 . 348) (337 . 341) 338 (295 . 296) (#("    " 0 4 (fontified t)) . 295) (undo-tree-id661 . -3) 301 (286 . 290) 289 (260 . 264) 269 (218 . 219) (#("    " 0 4 (fontified t)) . 218) 224) nil (25369 30656 799006 647000) 0 nil])
([nil nil ((380 . 384) (#("     " 0 5 (fontified nil)) . -375) (384 . 385) (380 . 384) (374 . 380) (362 . 372) (361 . 363) (350 . 361) (#("b" 0 1 (fontified t)) . -350) (undo-tree-id645 . -1) (#("a" 0 1 (fontified t)) . -351) (undo-tree-id646 . -1) (#("c" 0 1 (fontified t)) . -352) (undo-tree-id647 . -1) (#("k" 0 1 (fontified t)) . -353) (undo-tree-id648 . -1) (#("e" 0 1 (fontified t)) . -354) (undo-tree-id649 . -1) (#("n" 0 1 (fontified t)) . -355) (undo-tree-id650 . -1) (#("d" 0 1 (fontified t)) . -356) (undo-tree-id651 . -1) (#(" " 0 1 (fontified t)) . -357) (undo-tree-id652 . -1) (#("=" 0 1 (fontified t)) . -358) (undo-tree-id653 . -1) (#("=" 0 1 (fontified t)) . -359) (undo-tree-id654 . -1) 360 (350 . 360) (#("v" 0 1 (fontified t)) . -350) (undo-tree-id655 . -1) 351 (350 . 351) (348 . 351) (#("
" 0 1 (fontified t)) . -348) (undo-tree-id656 . -1) (#(" " 0 1 (fontified t)) . -349) (undo-tree-id657 . -1) (#(" " 0 1 (fontified t)) . -350) (undo-tree-id658 . -1) (#(" " 0 1 (fontified t)) . -351) (undo-tree-id659 . -1) (#(" " 0 1 (fontified t)) . -352) (undo-tree-id660 . -1) 353 (349 . 353) (#("    " 0 4 (fontified nil)) . -344) (352 . 353) (348 . 352) (343 . 348)) nil (25369 30656 799001 954000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 403)) nil (25369 30656 798993 858000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 403)) nil (25369 30656 798993 432000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 403)) nil (25369 30656 798992 841000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 380) (undo-tree-id643 . 1) (undo-tree-id644 . -3) 383) nil (25369 30656 798992 233000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 380) (undo-tree-id641 . 5) (undo-tree-id642 . -3) 383) nil (25369 30656 798990 853000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 380) (undo-tree-id637 . 5) (undo-tree-id638 . -5) (undo-tree-id639 . -5) (undo-tree-id640 . -3) 383) nil (25369 30656 798988 402000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 380) (undo-tree-id635 . 5) (undo-tree-id636 . -3) 383) nil (25369 30656 798986 594000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -414) (420 . 421) (418 . 420) (414 . 418) (383 . 384) (412 . 413)) nil (25369 30656 798984 763000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 422)) nil (25369 30656 798984 180000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 422)) nil (25369 30656 798983 818000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -418) (undo-tree-id634 . -1) 419) nil (25369 30656 798983 251000) 0 nil])
([nil current ((464 . 470) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -464) (undo-tree-id617 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -465) (undo-tree-id618 . -1) 466 (461 . 466) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -461) (undo-tree-id619 . -1) 462 (461 . 462) (453 . 461) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -453) (undo-tree-id620 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -454) (undo-tree-id621 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -455) (undo-tree-id622 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -456) (undo-tree-id623 . -1) (#("g" 0 1 (fontified t face font-lock-comment-face)) . -457) (undo-tree-id624 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -458) (undo-tree-id625 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -459) (undo-tree-id626 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -460) (undo-tree-id627 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -461) (undo-tree-id628 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -462) (undo-tree-id629 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -463) (undo-tree-id630 . -1) 464 (461 . 464) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -461) (undo-tree-id631 . -1) 462 (457 . 462) (453 . 457) (432 . 453) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -432) (undo-tree-id632 . -1) 433 (428 . 433) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -428) (undo-tree-id633 . -1) 429 (418 . 429) (417 . 418)) nil (25369 30656 798978 617000) 0 nil])
nil
